<!DOCTYPE html>
<html>

<body>
    <%- include('templates/header'); %>
    <link rel="stylesheet" type="text/css" href="http://2018.igem.org/wiki/index.php?title=Template:Thessaloniki/katex.css&action=raw&ctype=text/css" />
    <%- include('templates/layout-header'); %>
    <igem-layout>
        <q-page class="text-justify q-pa-lg">
            <div class="row justify-center">
                <div class="col-md-6 col-lg-4">
                    <img v-if="!nightMode" class="responsive-image" src="http://2018.igem.org/wiki/images/0/0e/T--Thessaloniki--model-logo.svg">
                    <img v-if="nightMode" class="responsive-image" src="http://2018.igem.org/wiki/images/e/ec/T--Thessaloniki--model-logo-light.svg">
                </div>
            </div>
            <div class="flex flex-center q-mb-md" :class="rM('text-dark', 'text-light')">
                <div class="col-xs-12 col-sm-10 col-md-9 col-lg-5">
                    <p>
                        The goal of the model is to study the Incoherent Feed Forward Loop (IFFL)
                        as a network type in three systems that use different components critical
                        to the proper network operation. This function aims at balancing the final
                        product to a specific steady state, regardless of the input disruption. We
                        then responded to questions raised by the wet lab, thus helping towards the
                        right course of thought during experimental planning, as well as a better
                        understanding of the systems and the different choices that emerged. We
                        applied a sensitivity analysis to classify system parameters according to
                        their significance, and finally, we explored the robustness of our system
                        predictions by indentifying parameter sets and evaluating their cellular
                        behavior.
                    </p>
                    <h3>How IFFL works</h3>
                    <p>
                        The stability of a system in which IFFL is applied is represented by the
                        staying of its output at a constant level in the equilibrium state for each
                        change of input. In this type of network, the number of plasmids is the
                        input, which is variable and the final protein is the output of the system
                        that must remain constant at each change of input.
                    </p>
                    <p>
                        In the following figure, the input X is shown to be responsible for the
                        continuously increasing production of the gene of interest Z, as well as
                        for the production of the internal variable Y, which suppresses the
                        production of Z. As mentioned in [], the system is represented by a logical
                        AND gate, which expresses the effect of input X and suppressor Y on output
                        Z.
                    </p>
                </div>
            </div>
            <div class="row justify-center q-mb-md" :class="rM('text-dark', 'text-light')">
                <div class="col-md-4 col-sm-12">
                    <circle-content title="Theory">
                        <template slot="modal-content">
                            <div class="row q-pa-md">
                                <div id="7e709f09-87f3-4a59-b4dd-79f5478c840c" class="plotly-graph-div"></div>
                            </div>
                        </template>
                    </circle-content>
                </div>
            </div>
            <div class="flex flex-center q-mb-md" :class="rM('text-dark', 'text-light')">
                <div class="col-xs-12 col-sm-10 col-md-9 col-lg-5">
                    <div class="row justify-center">
                        <div class="col-md-4 col-sm-12">
                            <div class="row justify-center">
                                <a href="http://2018.igem.org/Team:Thessaloniki/Model/Tale">
                                    <q-btn style="width: 150px; height: 150px; border: 4px solid cornflowerblue; border-radius: 100%" label="TALE"></q-btn>
                                </a>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-12">
                            <div class="row justify-center">
                                <a href="http://2018.igem.org/Team:Thessaloniki/Model/dCas9">
                                    <q-btn style="width: 150px; height: 150px; border: 4px solid cornflowerblue; border-radius: 100%" label="dCas9"></q-btn>
                                </a>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-12">
                            <div class="row justify-center">
                                <a href="http://2018.igem.org/Team:Thessaloniki/Model/NAR">
                                    <q-btn style="width: 150px; height: 150px; border: 4px solid cornflowerblue; border-radius: 100%" label="NAR"></q-btn>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </q-page>
    </igem-layout>
    <%- include('templates/layout-footer'); %>
    <script src="http://2018.igem.org/wiki/index.php?title=Template:Thessaloniki/tweenlite.js&action=raw&ctype=text/javascript"></script>
    <script src="http://2018.igem.org/wiki/index.php?title=Template:Thessaloniki/plotly.js&action=raw&ctype=text/javascript"></script>
    <script src="http://2018.igem.org/wiki/index.php?title=Template:Thessaloniki/katex.js&action=raw&ctype=text/javascript"></script>
    <script>
        iGEM.registerHook('loadHook', async function ([Vue, store]) {
            store.commit('setPage', 'model')
            await iGEM.loadComponent(iGEM.links.CircleContent)
        })
        iGEM.registerHook('loadedHook', function ([self]) {
            let graphs = []
            let instances = []
            let resizeDebounce = null

            function resizePlots() {
                instances.forEach((gd) => {
                    let bb = gd.getBoundingClientRect()
                    Plotly.relayout(gd, {
                        width: bb.width,
                        height: bb.height
                    })
                })
            }

            window.addEventListener('resize', function () {
                if (resizeDebounce) {
                    window.clearTimeout(resizeDebounce)
                }
                resizeDebounce = window.setTimeout(resizePlots, 100)
            })

            function initializeGraphs() {
                graphs.forEach((graph) => {
                    let gd = document.getElementById(graph.id)
                    instances.push(gd)
                    let color = "#fff"
                    if (self.nightMode) {
                        color = '#171617'
                    }
                    Plotly.plot(gd, {
                        data: graph.data.data,
                        layout: {
                            ...graph.data.layout,
                            autosize: true,
                            paper_bgcolor: color,
                            plot_bgcolor: color
                        },
                        frames: graph.data.frames,
                        responsive: true
                    });
                    setTimeout(resizePlots, 100)
                })
            }

            initializeGraphs()

            iGEM.registerHook('nightModeHook', ([mode]) => {
                instances.forEach((gd) => {
                    Plotly.purge(gd)
                })
                instances = []
                initializeGraphs()
            })

            let equatations = [
            ]

            equatations.forEach((equatation) => {
                let el = document.getElementById(equatation.id)
                katex.render(equatation.eq, el, {})
            })
        })
    </script>
    <%- include('templates/footer'); %>
</body>

</html>